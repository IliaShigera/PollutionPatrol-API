// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PollutionPatrol.Modules.Pollution.Infrastructure.Persistence;

#nullable disable

namespace PollutionPatrol.Modules.Pollution.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(PollutionDbContext))]
    partial class PollutionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PollutionPatrol.BuildingBlocks.Domain.Models.Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Entity");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("PollutionPatrol.Modules.Pollution.Domain.Report.PollutionReport", b =>
                {
                    b.HasBaseType("PollutionPatrol.BuildingBlocks.Domain.Models.Entity");

                    b.Property<Point>("Coordinates")
                        .IsRequired()
                        .HasColumnType("geography(Point, 4326)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ReportedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ReporterId")
                        .HasColumnType("uuid");

                    b.HasIndex("Coordinates");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Coordinates"), "gist");

                    b.ToTable("Reports", (string)null);
                });

            modelBuilder.Entity("PollutionPatrol.Modules.Pollution.Domain.Report.PollutionReport", b =>
                {
                    b.HasOne("PollutionPatrol.BuildingBlocks.Domain.Models.Entity", null)
                        .WithOne()
                        .HasForeignKey("PollutionPatrol.Modules.Pollution.Domain.Report.PollutionReport", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("PollutionPatrol.BuildingBlocks.Media.Access.Abstractions.MediaKey", "MediaAttachmentKeys", b1 =>
                        {
                            b1.Property<Guid>("PollutionReportId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("AttachmentKey");

                            b1.HasKey("PollutionReportId", "Id");

                            b1.ToTable("MediaKey");

                            b1.WithOwner()
                                .HasForeignKey("PollutionReportId");
                        });

                    b.OwnsOne("PollutionPatrol.Modules.Pollution.Domain.Report.PollutionType", "PollutionType", b1 =>
                        {
                            b1.Property<Guid>("PollutionReportId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("PollutionType");

                            b1.HasKey("PollutionReportId");

                            b1.ToTable("Reports");

                            b1.WithOwner()
                                .HasForeignKey("PollutionReportId");
                        });

                    b.OwnsOne("PollutionPatrol.Modules.Pollution.Domain.Report.ReportStatus", "Status", b1 =>
                        {
                            b1.Property<Guid>("PollutionReportId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Status");

                            b1.HasKey("PollutionReportId");

                            b1.ToTable("Reports");

                            b1.WithOwner()
                                .HasForeignKey("PollutionReportId");
                        });

                    b.Navigation("MediaAttachmentKeys");

                    b.Navigation("PollutionType")
                        .IsRequired();

                    b.Navigation("Status")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
